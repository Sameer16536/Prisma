//Autogenerated Client
import { PrismaClient } from "@prisma/client";
const prisma = new PrismaClient()

//Insert function::
const insertUserData = async(email:string,password:string,firstName:string,lastName:string)=>{
  const res = await  prisma.user.create({
        data:{
            email,
            password,
            firstName,
            lastName
        },
        select:{
            id:true,
            email:true,
            firstName:true
        }
    })
    console.log(res)
}
// insertUserData("johnnysins@gmail.com","Jsin","Johnny","Sins")

interface UpdateParams{
    firstName:string,
    lastName:string
}
//Update 
const updateUserData = async(email:string,{firstName,lastName}:UpdateParams)=>{
    const res = await prisma.user.update({
        where:{
            email:email
        },
        data:{
            firstName,
            lastName
        }
    })
    console.log(res)
}
// updateUserData("marathesameer15@gmail.com",{firstName:"Marathe",lastName:"Sameer"})

//get user details
const getUserData = async()=>{
    const res = await prisma.user.findMany({
        select:{
            id:true,
            firstName:true,
            lastName:true
        }
    })
    console.log(res)
}
// getUserData()

//Todos::

const createTodo =async(userId:number,title:string,description:string)=>{
    const res = await prisma.todo.create({
        data:{
            userId,
            title,
            description
        },
        select:{
            userId:true,
            title:true,
            description:true
        }
    })
    console.log(res)
}
// createTodo(2,"Gaming","valorant at 7pm")

//getTodos
const getTodos = async(userId:number)=>{
    const res = await prisma.todo.findMany({
        select:{
            id:true,
            title:true,
            description:true,
            userId:true
        }
    })
    console.log(res)
}
getTodos(1)