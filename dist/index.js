"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
//Autogenerated Client
const client_1 = require("@prisma/client");
const prisma = new client_1.PrismaClient();
//Insert function::
const insertUserData = (email, password, firstName, lastName) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield prisma.user.create({
        data: {
            email,
            password,
            firstName,
            lastName
        },
        select: {
            id: true,
            email: true,
            firstName: true
        }
    });
    console.log(res);
});
//Update 
const updateUserData = (email_1, _a) => __awaiter(void 0, [email_1, _a], void 0, function* (email, { firstName, lastName }) {
    const res = yield prisma.user.update({
        where: {
            email: email
        },
        data: {
            firstName,
            lastName
        }
    });
    console.log(res);
});
// updateUserData("marathesameer15@gmail.com",{firstName:"Marathe",lastName:"Sameer"})
//get user details
const getUserData = () => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield prisma.user.findMany({
        select: {
            id: true,
            firstName: true,
            lastName: true
        }
    });
    console.log(res);
});
// getUserData()
//Todos::
const createTodo = (userId, title, description) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield prisma.todo.create({
        data: {
            userId,
            title,
            description
        },
        select: {
            userId: true,
            title: true,
            description: true
        }
    });
    console.log(res);
});
// createTodo(2,"Gaming","valorant at 7pm")
//getTodos
const getTodos = (userId) => __awaiter(void 0, void 0, void 0, function* () {
    const res = yield prisma.todo.findMany({
        select: {
            id: true,
            title: true,
            description: true,
            userId: true
        }
    });
    console.log(res);
});
getTodos(1);
